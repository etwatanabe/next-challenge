// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seller {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String

  products   Product[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String
  price       Decimal   @db.Decimal(10, 2)
  imageUrl    String
  sellerId    String
  seller      Seller    @relation(fields: [sellerId], references: [id])

  orderProducts OrderProduct[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Order {
  id         String       @id @default(uuid())
  customerId String
  customerEmail   String
  status     OrderStatus  @default(PENDING)
  amount     Decimal      @db.Decimal(10, 2)
  paymentId  String?

  orderProducts OrderProduct[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model OrderProduct {
  id         String    @id @default(uuid())
  orderId    String
  order      Order     @relation(fields: [orderId], references: [id])
  productId  String
  product    Product   @relation(fields: [productId], references: [id])
  quantity   Int
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
  FAILED
}